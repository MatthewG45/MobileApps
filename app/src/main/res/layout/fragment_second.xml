<?xml version="1.0" encoding="utf-8"?>
<androidx.core.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".SecondFragment">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:padding="16dp">

        <TextView
            android:id="@+id/textview_title"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginTop="16dp"
            android:text="@string/title"
            android:textSize="30sp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintBottom_toTopOf="@id/layout_descriptions" />

        <!--
        I included two Linear Layouts side by side so that I can align each textview
        in the first linear layout with their corresponding output view in the
        second linear layout.
        However, this creates an issue with aligning things through constraints since
        each layout can be a different height relative to the other.
        Therefore, I added a barrier below both linear layouts that is constrained to
        both of them at the same time, therefore it will always be below whichever
        layout is longer. Because of the barrier, I can now constrain my button to it
        rather than one of the layouts, keeping the button below both
        linear layouts at all times.
        -->
        <LinearLayout
            android:id="@+id/layout_descriptions"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:layout_marginBottom="16dp"

            app:layout_constraintTop_toBottomOf="@id/textview_title"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toStartOf="@id/layout_outputs"
            app:layout_constraintBottom_toTopOf="@id/Barrier"
            android:layout_weight="0.5" >

            <TextView
                android:id="@+id/textview_payment"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:layout_marginEnd="5dp"

                android:text="@string/payment"
                android:textSize="15sp"
                android:gravity="top|end"
                android:layout_gravity="end"

                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintBottom_toBottomOf="parent" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/layout_outputs"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:layout_marginBottom="16dp"

            app:layout_constraintTop_toBottomOf="@id/textview_title"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toEndOf="@id/layout_descriptions"
            app:layout_constraintBottom_toTopOf="@id/Barrier"
            android:layout_weight="0.5">

            <TextView
                android:id="@+id/textview_payment_output"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_marginTop="16dp"
                android:layout_marginStart="5dp"

                android:text=""
                android:textSize="15sp"
                android:layout_gravity="start"

                app:layout_constraintTop_toTopOf="parent"
                app:layout_constraintEnd_toEndOf="parent"
                app:layout_constraintStart_toStartOf="parent"
                app:layout_constraintBottom_toBottomOf="parent" />

        </LinearLayout>

        <!--
        Here is the barrier, as you can see it is constrained to both
        linear layouts at the same time
        -->
        <android.support.constraint.Barrier
            android:id="@+id/Barrier"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            app:barrierDirection="bottom"
            app:constraint_referenced_ids="layout_descriptions,layout_outputs"

            app:layout_constraintBottom_toTopOf="@id/button_back"

            />

        <Button
            android:id="@+id/button_back"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/previous"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@id/textview_title" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</androidx.core.widget.NestedScrollView>